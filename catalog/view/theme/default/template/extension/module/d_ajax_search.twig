<style type="text/css">
{{ setting['class_form'] }} {
		margin-bottom: 0;
	}
</style>

{% if (setting['width'] and not mobile) %}
    <style type="text/css">
        #d_ajax_search_results {
            width: {{setting['width']}};
        }
    </style>
{% endif %}

{% if (setting['custom_style']) %}
    <style type="text/css">
        
        {{setting['custom_style']}}
        
    </style>
{% endif %}

<button id="searchModalHandler" type="button" class="ve-hidden modal_search btn btn-primary" style="display: none">
    Launch Live Ajax Search
</button>
{% if mobile %}
    <div class="dvdy-modal" id="searchModal">
		<div class="dvdy-modal-backdrop"></div>
        <div class="dvdy-modal-dialog d-ajax-search-modal">
            <div class="dvdy-modal-dialog__content d-ajax-search-modal__content">
				<div class="ve-card">
					<div class="ve-card__header">
						<div class="ve-input-group">
							<button onclick="closeSearchModal()" class="ve-btn ve-pull-left"><i class="fa fa-arrow-left"></i></button>
							<input id="search_input" type="text" name="search" autofocus value="" placeholder="Search"
								class="ve-pull-left ve-input ">
							<button class="ve-btn ve-pull-right" onclick="clearInput()">
								<i class="fa fa-close"></i>
							</button>
							<button class="ve-btn ve-pull-right"><i class="fa fa-search"></i></button>
						</div>
					</div>
					<div class="ve-card__section">
						<div class="d-ajax-search-modal__help"> {{ search_phase }}</div>
						<div id="d-ajax-search-modal-results-wrapper"></div>
					</div>
				</div>
            </div>
        </div>
    </div>
{% endif %}
<script>
	function text_complite(ev, keywords) {
		if (ev.keyCode == 38 || ev.keyCode == 40) {
			return false;
		}
		if (keywords == '' || keywords.length < 1 || keywords.length < {{ setting['max_symbols'] }} ) {
			return false;
		}

		keywords = encodeURI(keywords);

		axios.get('index.php?route=extension/module/d_ajax_search/getAutocomplite&keyword='+keywords).then(function(response) {
			var autocomplite = response.data;
			{% if mobile %}
			document.querySelector(".d-ajax-search-modal__help").style.display = "none";
			{% endif %}
			if (typeof autocomplite != 'undefined' && autocomplite != null) {
				document.querySelector("{{ setting['class'] }}").value = document.querySelector("{{ setting['class'] }}").value.toLowerCase();
				if (autocomplite != '' && autocomplite.indexOf(dv_cash("{{ setting['class'] }}").first().val()) !== -1) {
					{% if mobile %}
						new AutoSuggestControl(document.querySelector('#search_input'), [autocomplite.toLowerCase()]);
					{% else %}
						new AutoSuggestControl(document.querySelector('{{ setting['class'] }}'), [autocomplite.toLowerCase()]);
					{% endif %}
				}
			}
		}).catch(function(error) {
			console.error(error);
		});
	}

	function doquick_search(ev, keywords) {
		if (ev.keyCode == 38 || ev.keyCode == 40) {
			return false;
		}

		updown = -1;

		if (keywords == '' || keywords.length < 1 || keywords.length < {{ setting['max_symbols'] }} ) {
			return false;
		}
		(function () {
			var html = '<div id="d_ajax_search_results" {% if not mobile %} class="ve-card d-ajax-search-card" {% endif %}><div id="d_ajax_search_results_body" {% if not mobile %} class="ve-card-section d-ajax-search-card__body" {% endif %}>';
			html += '<center><i class="fa fa-spinner fa-spin fa-3x fa-fw" style="z-index: 2000; color: black;"></i></center>';
			if ({{ mobile }}) {
				dv_cash('#d-ajax-search-modal-results-wrapper').html(html);
			} else {
				dv_cash("{{ setting['class_form'] }}").after(html);
			}
		})();

		keywords = encodeURI(keywords);

		axios.get('index.php?route=extension/module/d_ajax_search/searchresults&keyword='+keywords).then(function(response) {
			var results = response.data;
			document.querySelector('#d_ajax_search_results')?.remove();
			{% if mobile %}
			document.querySelector(".d-ajax-search-modal__help").style.display = "none";
			{% endif %}
			var result = [];

			if (results) {
				for (index in results) {
					result.push(results[index]);
				}
			}
			
			if (typeof result != 'undefined' && result.length > 0) {
				if (result[0].keyword !== document.querySelector("{{ setting['class'] }}").value) {
					// dv_cash("{{ setting['class'] }}").first().val(result[0].keyword);
				}
				var html, i, name;
				html = '<div id="d_ajax_search_results"{% if not mobile %} class="ve-card d-ajax-search-card" {% endif %}><div id="d_ajax_search_results_body"{% if not mobile %} class="ve-card-section d-ajax-search-card__body" {% endif %}>';

				if (result[0].redirect) {
					html += '<div class="d-ajax-search__redirect ve-hidden">' + result[0].redirect + '</div>';
				}

				if (result[0].saggestion) {
					html += '<div class="d-ajax-search__saggestion ve-badge ve-badge--light">{{ results_for }} <span class="d-ajax-search__saggestion-result">' + result[0].saggestion + '</span></div>';
				}
				for (i = 0; i < result.length; i++) {


					if (i >= {{ setting['all_result_count'] }} && {{ setting['all_result_status'] }}) {
						var addclass = 've-hidden';
					} else {
						addclass = '';
					}

					if ({{ setting['block_result'] }}) {
						if (i == 0) {
							html += '<div id="result_block" class="d_as-result-block ' + addclass + '"><div class="ve-row d_as-result-block__heading-row"><p class="ve-h3 ve-text-left d_as-block-text">' + result[i].where_find + '</p></div>';
						} else if (i !== 0 && result[i].where_find !== result[i - 1].where_find) {
							html += '<div id="result_block" class="d_as-result-block ' + addclass + '"><div class="ve-row d_as-result-block__heading-row"><p class="ve-h3 ve-text-left d_as-block-text">' + result[i].where_find + '</p></div>';
						}
					}

					html += '<a class="d_as-result-link ' + addclass + ' ve-row" item_data="' + result[i].item_data + '" data-sort-order="' + result[i].weight + '" href="' + result[i].href + '">';

					if (result[i].image) {
						html += '<div class="ve-col-3 d_as-result-link__image-wrapper"><img class="d_as-result-link__image" src="' + result[i].image + '" /></div>';
					} else {
						html += '<div class="ve-col-3 ve-text-center"></div>';
					}

					if (result[i].name.length > 30) {
						name = result[i].name.slice(0, 40) + '...';
					} else {
						name = result[i].name;
					}
					html += '<div class="d_as-result-link__name ve-col-6 ve-text-left"><span class="forkeydon">' + name + '</span>';
					html += '{% if setting['where_search'] %} <br><span class="ve-badge ve-badge--light">in ' + result[i].where_find + ' ' + result[i].find_by + '</span>{% endif %}';
					html += '</div>';

					if (result[i].special) {
						html += '<div class="ve-col-3 d_as-result-link__price-wrapper"><span class="d_as-result-link__price-special ve-pull-right">' + result[i].special + '</span><br>';
						html += '<span class="d_as-result-link__price-old ve-pull-right">' + result[i].price + '</span></div>';
					} else {

						if (result[i].price) {
							html += '<div class="ve-col-3 d_as-result-link__price-wrapper"><span class="ve-pull-right">' + result[i].price + '</span></div>';
						} else {
							html += '<div class="ve-col-3 d_as-result-link__price-wrapper"></div>';
						}
					}

					html += '</a>';

					if ({{ setting['block_result'] }}) {
						if (i < result.length - 1 && result[i].where_find == result[i + 1].where_find) {
						} else {
							html += '</div>';
						}
					}

				}
				if (addclass == 've-hidden') {
					html += '</div>{% if setting['all_result_status'] %}<div class="d-ajax-search-modal__all-results-wrapper d-ajax-search-card-all-results-wrapper ve-row"><a class="d-ajax-search-modal__all-results d-ajax-search-card-all-results"> {{ all_results }} <i class="fa fa-caret-down"></i></a></div>{% endif %}</div>';
				}
				if (document.querySelectorAll('#d_ajax_search_results').length > 0) {
					document.querySelector('#d_ajax_search_results').remove();
				}
				if ({{ mobile }}) {
					dv_cash('#d-ajax-search-modal-results-wrapper').html(html);
				} else {
					dv_cash("{{ setting['class_form'] }}").after(html);
				}

				dv_cash(".d_as-result-link").on('click', function (ev) {
					var json = {};

					var link = ev.currentTarget.attributes.item_data.value;
					json.type = link.split('=')[0].split('_')[0];
					json.type_id = link.split('=')[1];

					json.select = dv_cash(ev.currentTarget).find('.forkeydon').html();
					if ({{ mobile }}) {
						if (dv_cash('.d-ajax-search__saggestion-result').text() != '') {
							json.search = dv_cash('.d-ajax-search__saggestion-result').text();
						} else if (dv_cash('.d-ajax-search__redirect').text() != '') {
							json.search = dv_cash('.d-ajax-search__redirect').text();
						} else {
							json.search = dv_cash('#search_input').val();
						}
					} else {
						if (dv_cash('.d-ajax-search__saggestion-result').text() != '') {
							json.search = dv_cash('.d-ajax-search__saggestion-result').text();
						} else if (dv_cash('.d-ajax-search__redirect').text() != '') {
							json.search = dv_cash('.d-ajax-search__redirect').text();
						} else {
							json.search = dv_cash("{{ setting['class'] }}").first().val();
						}
					}

					write_to_database(json);
				});


				dv_cash('.d-ajax-search-card-all-results').on('click', function () {
					dv_cash('.d_as-result-link').removeClass('ve-hidden');
					dv_cash('.d_as-result_block').removeClass('ve-hidden');
					dv_cash('.d-ajax-search-card-all-results').addClass('ve-hidden');
				});

			} else {
				dv_cash('#d_ajax_search_results').remove();
				var html;
				html = '<div id="d_ajax_search_results" {% if not mobile %} class="ve-card d-ajax-search-card" {% endif %}><div id="d_ajax_search_results_body" {% if not mobile %} class="ve-card-section d-ajax-search-card__body" {% endif %}>';
				html += '<a class="ve-row" href="#">';
				html += '<div class="d-ajax-search-modal__no-results d-ajax-search-card__no-results"><i class="fa fa-exclamation-circle"></i> {{ no_results }}</div></a></div></div>';
				if ({{ mobile }}) {
					dv_cash('#d-ajax-search-modal-results-wrapper').html(html);
				} else {
					dv_cash("{{ setting['class_form'] }}").after(html);
				}
			}
		}).catch(function(error) {
			console.error(error);
		});

		return true;
	}

	var delay = (function () {
		var timer = 0;
		return function (callback, ms) {
			clearTimeout(timer);
			timer = setTimeout(callback, ms);
		};
	})();

	function write_to_database(val) {
		axios.post('index.php?route=extension/module/d_ajax_search/write_to_base', val).then(function(response) {

		}).catch(function(error) {
			console.error(error);
		});
	}

	function clearInput() {
		document.querySelector('#d_ajax_search_results')?.remove();
		document.querySelector('#search_input').value = '';
		document.querySelector(".d-ajax-search-modal__help").style.display = "block";
		document.querySelector('#search_input').focus();
	}

	function closeSearchModal() {
		new DvDialogify().initModal('#searchModal').hide();
	}
	

	dv_cash(document).ready(function () {
		if ({{ mobile }}) {
			dv_cash('#searchModalHandler').on('click', function(){
				new DvDialogify().initModal('#searchModal', {
					afterShow: [
						function() {
							window.setTimeout(() => document.querySelector('#search_input').focus(), 100);
							document.querySelector(".d-ajax-search-modal__help").style.display = "block";
						}
					],
				}).show();
				
			});
			dv_cash('{{ setting['class'] }}').on('click', function (ev) {
				if (dv_cash(ev.target).attr('id') !='search_input') {
					document.querySelector('#searchModalHandler').dispatchEvent(new Event('click'));
				}
			});
		}
		dv_cash("{{ setting['class'] }}").attr('maxlength', '64');
        dv_cash("{{ setting['class'] }}").attr('autocomplete', 'off');
		dv_cash('{{ setting['class'] }}').on('blur', function (event) {
			setTimeout(function () {
				dv_cash('body').on('click', function (event) {
					if (dv_cash(event.target).attr('class') != 'd-ajax-search-card__all-results ve-hidden') {
						{% if not mobile %}
						dv_cash('#d_ajax_search_results').remove();
						{% endif %}
					}
				});

				if ({{ setting['block_result'] }}) {
					updown = 1;
				} else {
					updown = 0;
				}
			}, 500);
		});
		dv_cash('{{ setting['class'] }}').on('keyup', function (ev) {
			var a = ev;
			var b = this.value;
			text_complite(a, b);
			delay(function () {
				doquick_search(a, b);
			}, 500);
		});
		dv_cash('{{ setting['class'] }}').on('focus', function (ev) {
			var a = ev;
			var b = this.value;
			text_complite(a, b);
			delay(function () {
				doquick_search(a, b);
			}, 500);
		});
		if ({{ setting['block_result'] }}) {
			var updown = 0;
			var block = 0;
		} else {
			var updown = -1;
		}
		function upDownEvent(ev) {

			if ({{ setting['block_result'] }}) {
				var check = document.getElementsByClassName('d_as-result_block');
				elem = check[block];
				var min_el = 1;
			} else {
				var elem = document.getElementById('d_ajax_search_results_body');
				var min_el = 0;
			}
			var xxx = 0;
			var fkey = dv_cash("{{ setting['class'] }}").find('{{ setting['class'] }}').first();

			if (elem) {

				var length = elem.childNodes.length - 1;

				if (updown != -1 && typeof (elem.childNodes[updown]) != 'undefined') {

					dv_cash(elem.childNodes[updown]).removeClass('selected');
				}
				if ({{ setting['block_result'] }}) {
					if (block != 0 && block != block - 1) {
						dv_cash(check[block - 1].childNodes[check[block - 1].childNodes.length - 1]).removeClass('selected');
					}
				}

				if (ev.keyCode == 38) {
					updown = (updown > -1) ? --updown : updown;
					if ({{ setting['block_result'] }}) {
						if (updown <= 0) {
							updown = (check[block - 1].childNodes.length) - 1;
							dv_cash(check[block - 1].childNodes[(check[block - 1].childNodes.length) - 1]).addClass('selected');
							block--;
							xxx = 5;
						}
					}

				} else if (ev.keyCode == 40) {
					updown = (updown <= length) ? ++updown : updown;
				}

				if (updown >= min_el && updown <= length && (ev.keyCode == 40 || ev.keyCode == 38)) {

					dv_cash(elem.childNodes[updown]).addClass('selected');

					var text = dv_cash(elem.childNodes[updown]).find('.forkeydon').html();

					dv_cash("{{ setting['class'] }}").first().val(text);
				}
				if (updown >= length && xxx != 5 && typeof (check[block + 1]) != 'undefined') {
					block++;
					updown = 0;
				}
				if (ev.keyCode == 13) {
					if (typeof dv_cash('.d_as-result-link.selected').attr('href') != 'undefined') {
						window.location.replace(dv_cash('.d_as-result-link.selected').attr('href'));
					}

				}
			}

			return false;
		}
	});
</script>

